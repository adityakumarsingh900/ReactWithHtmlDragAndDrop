{"version":3,"sources":["pages/TrelloBoard/components/AddListForm.js","pages/TrelloBoard/components/AddCardForm.js","pages/TrelloBoard/components/Card.js","utils/storage.js","entities/list.js","entities/card.js","pages/TrelloBoard/controllers/boardController.js","pages/TrelloBoard/components/List.js","pages/TrelloBoard/components/Board.js","pages/TrelloBoard/index.js","App.js","reportWebVitals.js","index.js"],"names":["AddListForm","onClose","onSubmit","useState","name","value","setValue","Layer","position","full","modal","onClickOutside","onEsc","Box","fill","overflow","width","pad","flex","direction","justify","Heading","level","margin","Button","icon","Close","onClick","vertical","Form","onChange","nextValue","FormField","label","htmlFor","required","TextInput","type","top","primary","defaultProps","console","log","AddCardForm","TextArea","Card","item","onDelete","setAllowDroping","background","elevation","draggable","onDragStart","evt","dataTransfer","setData","toString","onDragEnd","dropEffect","border","color","side","Text","desc","setInLocalStorage","key","localStorage","setItem","getFromLocalStorage","getItem","List","data","this","JSON","stringify","toJSON","getCardEntity","CardEntity","getListEntity","cards","setCards","allowDroping","readyToCatch","setReadyToCatch","openCardFormLayer","setOpenCardFormLayer","handleCardAddition","useCallback","find","l","alert","oldData","seq","length","handleCardDelete","filter","d","useEffect","list","parse","map","getCardsList","saveCardsOnLocal","height","min","round","onDragOver","preventDefault","onDragLeave","onDrop","ev","getData","c","align","tip","Add","memo","TrelloBoard","openListLayer","setOpenListLayer","ListEntity","getLocalList","setList","handleListDelete","i","removeItem","Board","theme","global","font","family","size","App","Grommet","tag","alignContent","left","right","Footer","Anchor","href","target","textAlign","Linkedin","reverse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.820b5c6b.chunk.js","sourcesContent":["import { useState } from 'react';\nimport {\n  Box,\n  Button,\n  Form,\n  FormField,\n  TextInput,\n  Layer,\n  Heading,\n} from \"grommet\";\nimport PropTypes from \"prop-types\";\n\nimport { Close } from \"grommet-icons\";\n\nconst AddListForm = ({ onClose, onSubmit }) => {\n  const [value, setValue] = useState({ name: \"\" });\n\n  return (\n    <Layer\n      position=\"right\"\n      full=\"vertical\"\n      modal\n      onClickOutside={onClose}\n      onEsc={onClose}\n    >\n      <Box fill=\"vertical\" overflow=\"auto\" width=\"medium\" pad=\"medium\">\n        <Box flex={false} direction=\"row\" justify=\"between\">\n          <Heading level={2} margin=\"none\">\n            Add List\n          </Heading>\n          <Button icon={<Close />} onClick={onClose} />\n        </Box>\n        <Box flex=\"grow\" overflow=\"auto\" pad={{ vertical: \"medium\" }}>\n          <Form\n            value={value}\n            onChange={(nextValue) => setValue(nextValue)}\n            onSubmit={({ value: nextValue }) => onSubmit(nextValue)}\n          >\n            <FormField label=\"Name\" name=\"name\" htmlFor=\"name\" required>\n              <TextInput name=\"name\" type=\"name\" />\n            </FormField>\n\n            <Box direction=\"row\" justify=\"between\" margin={{ top: \"medium\" }}>\n              <Button type=\"reset\" label=\"Reset\" onClick={() => setValue({})} />\n              <Button type=\"submit\" label=\"Add\" primary />\n            </Box>\n          </Form>\n        </Box>\n      </Box>\n    </Layer>\n  );\n};\n\nAddListForm.defaultProps = {\n  onClose: () => console.log('hii'),\n};\n\nAddListForm.propTypes = {\n  onClose: PropTypes.func,\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default AddListForm;\n","import { useState } from 'react';\nimport {\n  Box,\n  Button,\n  Form,\n  FormField,\n  TextInput,\n  Layer,\n  Heading,\n  TextArea,\n} from \"grommet\";\nimport PropTypes from \"prop-types\";\n\nimport { Close } from \"grommet-icons\";\n\nconst AddCardForm = ({ onClose, onSubmit }) => {\n  const [value, setValue] = useState({ name: \"\" });\n\n  return (\n    <Layer\n      position=\"right\"\n      full=\"vertical\"\n      modal\n      onClickOutside={onClose}\n      onEsc={onClose}\n    >\n      <Box fill=\"vertical\" overflow=\"auto\" width=\"medium\" pad=\"medium\">\n        <Box flex={false} direction=\"row\" justify=\"between\">\n          <Heading level={2} margin=\"none\">\n            Add Card\n          </Heading>\n          <Button icon={<Close />} onClick={onClose} />\n        </Box>\n        <Box flex=\"grow\" overflow=\"auto\" pad={{ vertical: \"medium\" }}>\n          <Form\n            value={value}\n            onChange={(nextValue) => setValue(nextValue)}\n            onSubmit={({ value: nextValue }) => onSubmit(nextValue)}\n          >\n            <FormField label=\"Name\" name=\"name\" htmlFor=\"name\" required>\n              <TextInput name=\"name\" type=\"name\" />\n            </FormField>\n\n            <FormField label=\"Description\" name=\"desc\" htmlFor=\"desc\" required>\n              <TextArea name=\"desc\" type=\"desc\" />\n            </FormField>\n\n            <Box direction=\"row\" justify=\"between\" margin={{ top: \"medium\" }}>\n              <Button type=\"reset\" label=\"Reset\" onClick={() => setValue({})} />\n              <Button type=\"submit\" label=\"Add\" primary />\n            </Box>\n          </Form>\n        </Box>\n      </Box>\n    </Layer>\n  );\n};\n\nAddCardForm.defaultProps = {\n  onClose: () => console.log('hii'),\n};\n\nAddCardForm.propTypes = {\n  onClose: PropTypes.func,\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default AddCardForm;\n","import PropTypes from \"prop-types\";\nimport { Box, Heading, Button, Text } from \"grommet\";\nimport { Close } from \"grommet-icons\";\n\nconst Card = ({ item, onDelete, setAllowDroping }) => {\n\t\n  const handleDragStart = (evt) => {\n    evt.dataTransfer.setData(\"text\", item.toString());\n    setAllowDroping(false);\n  };\n\n  const handleDragEnd = (evt) => {\n    if (evt.dataTransfer.dropEffect !== \"move\") {\n      setAllowDroping(true);\n      return 1\n    };\n    onDelete(item.name);\n    setAllowDroping(true);\n  };\n\n  return (\n    <Box\n      margin=\"xsmall\"\n      pad=\"xsmall\"\n      background=\"white\"\n      elevation=\"small\"\n      draggable=\"true\"\n      onDragStart={handleDragStart}\n      onDragEnd={handleDragEnd}\n    >\n      <Box\n        direction=\"row\"\n        justify=\"between\"\n        border={{ color: \"brand\", side: \"bottom\" }}\n      >\n        <Heading level={2} margin=\"none\">\n          {item.name}\n        </Heading>\n        <Button icon={<Close />} onClick={() => onDelete(item.name)} />\n      </Box>\n      <Box pad=\"small\">\n        <Text>{item.desc}</Text>\n      </Box>\n    </Box>\n  );\n};\n\nCard.propTypes = {\n  item: PropTypes.object,\n  onDelete: PropTypes.func,\n  setAllowDroping: PropTypes.func,\n};\n\nexport default Card;\n","function setInLocalStorage(key, value) {\n  localStorage.setItem(key, value);\n}\nfunction getFromLocalStorage(key) {\n  return localStorage.getItem(key);\n}\nfunction removeFromLocalStorage(key) {\n    localStorage.removeItem(key);\n}\n\nexport {\n  setInLocalStorage,\n  getFromLocalStorage,\n  removeFromLocalStorage,\n};\n","function List(data) {\n  this.name = data.name;\n\n  this.toString = function () {\n    return JSON.stringify(this);\n  };\n\n  this.toJSON = function () {\n    const data = {\n      name: this.name,\n    };\n    return data;\n  };\n}\n\nexport default List;\n","function Card(data) {\n  this.name = data.name;\n  this.desc = data.desc;\n\n  this.toString = function () {\n    return JSON.stringify(this);\n  };\n\n  this.toJSON = function () {\n    const data = {\n      name: this.name,\n      desc: this.desc,\n    };\n    return data;\n  };\n}\n\nexport default Card;\n","import {\n  setInLocalStorage,\n  getFromLocalStorage,\n} from \"../../../utils/storage\";\nimport ListEntity from \"../../../entities/list\";\nimport CardEntity from \"../../../entities/card\";\n\nfunction getLocalList() {\n    const l = getFromLocalStorage(\"list\");\n    if (!l) return [];\n    return JSON.parse(l).map(list => new ListEntity(list));\n};\n\nfunction saveListOnLocal(data) {\n    setInLocalStorage(\"list\", JSON.stringify(data));\n}\n\nfunction getCardsList(name) {\n    const l = getFromLocalStorage(`card_${name}`);\n    if (!l) return [];\n    return JSON.parse(l).map((list) => new CardEntity(list));\n}\n\nfunction saveCardsOnLocal(name, data) {\n  setInLocalStorage(`card_${name}`, JSON.stringify(data));\n}\n\nfunction getCardEntity(data) {\n    return new CardEntity(data);\n}\n\nfunction getListEntity(data) {\n  return new CardEntity(data);\n}\n\nexport {\n  getLocalList,\n  saveListOnLocal,\n  getCardsList,\n  saveCardsOnLocal,\n  getListEntity,\n  getCardEntity,\n};","import { memo, useState, useEffect, useCallback } from \"react\";\nimport { Box, Button, Heading } from \"grommet\";\nimport { Add, Close } from \"grommet-icons\";\nimport PropTypes from \"prop-types\";\n\nimport AddCardForm from \"./AddCardForm\";\nimport Card from \"./Card\";\nimport {\n  getCardsList,\n  saveCardsOnLocal,\n  getCardEntity,\n} from \"../controllers/boardController\";\n\nconst List = ({ name, onDelete }) => {\n  const [cards, setCards] = useState([]);\n  const [allowDroping, setAllowDroping] = useState(true);\n  const [readyToCatch, setReadyToCatch] = useState(false);\n  const [openCardFormLayer, setOpenCardFormLayer] = useState(false);\n\n  const handleDrop = (ev) => {\n    ev.preventDefault();\n    const data = JSON.parse(ev.dataTransfer.getData(\"text\"));\n\t\tif (cards.find((l) => l.name === data.name))\n\t\t\tsetCards((oldData) => {\n        return [getCardEntity({ ...data, name: `${data.name} (new)` }), ...oldData];\n      });\n\t\telse\n      setCards((oldData) => {\n        return [getCardEntity({ ...data }), ...oldData];\n      });\n    setReadyToCatch(false);\n  };\n\n  const handleCardAddition = useCallback(\n    (data) => {\n      if (cards.find((l) => l.name === data.name)) {\n        alert(\"Duplicate Card Name !!\");\n        return false;\n      }\n      setCards((oldData) => {\n        return [...oldData, getCardEntity({ ...data, seq: oldData.length + 1 })];\n      });\n      setOpenCardFormLayer(false);\n    },\n    [cards]\n  );\n\n  const handleCardDelete = useCallback((name) => {\n    setCards((oldData) => oldData.filter((d) => d.name !== name));\n  }, []);\n\n  useEffect(() => {\n    const list = getCardsList(name);\n    setCards(list);\n  }, [name]);\n\n  useEffect(() => {\n    saveCardsOnLocal(name, cards);\n  }, [name, cards]);\n\n  return (\n    <Box\n      width=\"medium\"\n      height={{ min: \"70vh\" }}\n      margin=\"small\"\n      pad=\"xsmall\"\n      round=\"small\"\n      elevation={allowDroping && readyToCatch && \"xlarge\"}\n      border={{\n        color: allowDroping\n          ? readyToCatch\n            ? \"green\"\n            : \"brand\"\n          : \"status-error\",\n      }}\n      background=\"light-2\"\n      onDragOver={(evt) => {\n        setReadyToCatch(true);\n        return allowDroping && evt.preventDefault();\n      }}\n      onDragLeave={() => setReadyToCatch(false)}\n      onDrop={handleDrop}\n    >\n      <Box\n        flex={false}\n        direction=\"row\"\n        justify=\"between\"\n        border={{ color: \"brand\", side: \"bottom\" }}\n      >\n        <Heading level={2} margin=\"none\">\n          {name}\n        </Heading>\n        <Button icon={<Close />} onClick={() => onDelete(name)} />\n      </Box>\n      <Box flex pad=\"xsmall\">\n        {cards.map((c) => (\n          <Card\n            key={c.name}\n            item={c}\n            onDelete={handleCardDelete}\n            setAllowDroping={setAllowDroping}\n          />\n        ))}\n      </Box>\n      <Box fill=\"horizontal\" align=\"center\">\n        <Button\n          tip=\"Add Card\"\n          primary\n          icon={<Add />}\n          onClick={() => setOpenCardFormLayer(true)}\n        />\n      </Box>\n      {openCardFormLayer && (\n        <AddCardForm\n          onClose={() => setOpenCardFormLayer(false)}\n          onSubmit={handleCardAddition}\n        />\n      )}\n    </Box>\n  );\n};\n\nList.propTypes = {\n  name: PropTypes.string,\n  onDelete: PropTypes.func,\n};\n\nexport default memo(List);\n","import { useState, useEffect, useCallback } from \"react\";\nimport { Box, Button } from \"grommet\";\nimport { Add } from \"grommet-icons\";\n\nimport AddListForm from \"./AddListForm\";\nimport List from \"./List\";\nimport {\n  getLocalList,\n  saveListOnLocal,\n  getListEntity,\n} from \"../controllers/boardController\";\n\nimport { removeFromLocalStorage } from \"../../../utils/storage\";\n\nconst TrelloBoard = () => {\n  const [openListLayer, setOpenListLayer] = useState(false);\n  const [list, setList] = useState(getLocalList());\n\n  const addToList = (data) => {\n    if (list.find((l) => l.name === data.name)) {\n      alert(\"Duplicate List Name !!\");\n      return false;\n    }\n    setList((oldData) => {\n      return [...oldData, getListEntity({ ...data })];\n    });\n    setOpenListLayer(false);\n  };\n\n  const handleListDelete = useCallback((name) => {\n    setList((oldData) => oldData.filter((i) => i.name !== name));\n    removeFromLocalStorage(`card_${name}`);\n  }, []);\n\n  useEffect(() => {\n    saveListOnLocal(list);\n  }, [list]);\n\n  return (\n    <Box>\n      <Box direction=\"row\">\n        <Box fill=\"horizontal\">\n          A new list can be added to the board by pressing the ADD LIST button\n          present on the right side of the board. A new card can be added to a\n          list via a plus(+) button present at the bottom of each list(inside a\n          list). A card can be dragged from one list and dropped on the second\n          list to make it part of the second list.\n        </Box>\n        <Box align=\"end\">\n          <Button\n            primary\n            label=\"Add List\"\n            icon={<Add />}\n            onClick={() => setOpenListLayer(true)}\n          />\n        </Box>\n      </Box>\n      <Box fill direction=\"row\">\n        {list.map((item) => (\n          <List key={item.name} name={item.name} onDelete={handleListDelete} />\n        ))}\n      </Box>\n      {openListLayer && (\n        <AddListForm\n          onClose={() => setOpenListLayer(false)}\n          onSubmit={addToList}\n        />\n      )}\n    </Box>\n  );\n};\n\nexport default TrelloBoard;\n","import { Box } from \"grommet\";\n\nimport Board from \"./components/Board\";\n\nconst TrelloBoard = () => {\n  return (\n    <Box pad=\"small\" height={{ min: '80vh' }}>\n      <Board />\n    </Box>\n  );\n};\n\nexport default TrelloBoard;\n","import { Grommet, Box, Heading, Footer, Anchor } from \"grommet\";\nimport { Linkedin } from \"grommet-icons\";\n\nimport TrelloBoard from \"./pages/TrelloBoard\";\n\nconst theme = {\n  global: {\n    font: {\n      family: \"Roboto\",\n      size: \"18px\",\n      height: \"20px\",\n    },\n  },\n};\n\nfunction App() {\n  return (\n    <Grommet theme={theme}>\n      <Box\n        tag=\"header\"\n        direction=\"row\"\n        align=\"center\"\n        alignContent=\"center\"\n        justify=\"between\"\n        background=\"brand\"\n        pad={{ left: \"medium\", right: \"small\", vertical: \"xsmall\" }}\n        elevation=\"medium\"\n      >\n        <Box>\n          <Heading size=\"small\">Demo of HTML5 Drag & Drop API</Heading>\n        </Box>\n      </Box>\n      <TrelloBoard />\n      <Footer background=\"light-4\" justify=\"end\" pad=\"small\">\n        <Anchor\n          href=\"https://www.linkedin.com/in/aditya-kumar-singh-a8b584106/\"\n          target=\"_blank\"\n          textAlign=\"center\"\n          size=\"small\"\n          label=\"Designed By Aditya\"\n          icon={<Linkedin color=\"blue\" />}\n          reverse\n        />\n      </Footer>\n    </Grommet>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}